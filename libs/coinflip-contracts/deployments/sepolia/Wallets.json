{
  "address": "0x3BBFDf3f21Ca7E6A8141C8cBb092ea67ccB6822B",
  "abi": [
    {
      "inputs": [],
      "name": "InsufficientFunds",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnAuthorizedApp",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Credit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "app",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gameID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "CreditFromGame",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Debit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "app",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gameID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DebitForGame",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "app",
          "type": "address"
        }
      ],
      "name": "addApp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "credit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "creditPlayer",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "players",
          "type": "address[]"
        }
      ],
      "name": "creditPlayers",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gameID",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "players",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "creditPlayersAndCreditAppOwnerTheRest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gameID",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "debitForGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "app",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "gameID",
          "type": "uint256"
        }
      ],
      "name": "getGameBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "app",
          "type": "address"
        }
      ],
      "name": "removeApp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc905ec6bb8c49300b5ed5032b1c8a893e9adbe4434d54698be28c833c78f46c5",
  "receipt": {
    "to": null,
    "from": "0x9B54b2B5Acf909692A762f017724a4574d7b6a2a",
    "contractAddress": "0x3BBFDf3f21Ca7E6A8141C8cBb092ea67ccB6822B",
    "transactionIndex": 1,
    "gasUsed": "819486",
    "logsBloom": "0x
    "blockHash": "0x6a978aa55bf21cd6dccc277dceb18300e7035de24d3c917554f399f1412dcf6f",
    "transactionHash": "0xc905ec6bb8c49300b5ed5032b1c8a893e9adbe4434d54698be28c833c78f46c5",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 5250052,
        "transactionHash": "0xc905ec6bb8c49300b5ed5032b1c8a893e9adbe4434d54698be28c833c78f46c5",
        "address": "0x3BBFDf3f21Ca7E6A8141C8cBb092ea67ccB6822B",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000009b54b2b5acf909692a762f017724a4574d7b6a2a"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x6a978aa55bf21cd6dccc277dceb18300e7035de24d3c917554f399f1412dcf6f"
      }
    ],
    "blockNumber": 5250052,
    "cumulativeGasUsed": "840486",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "c70b963124ee36744805d84a85670cb3",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnAuthorizedApp\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Credit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"app\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CreditFromGame\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Debit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"app\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DebitForGame\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"addApp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"credit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"creditPlayer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"players\",\"type\":\"address[]\"}],\"name\":\"creditPlayers\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameID\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"players\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"creditPlayersAndCreditAppOwnerTheRest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"debitForGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"app\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gameID\",\"type\":\"uint256\"}],\"name\":\"getGameBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"app\",\"type\":\"address\"}],\"name\":\"removeApp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"ProofOfChance Wallets supports only coinflip at the time of deployment It acts as a regular wallet that can be 'Credited' and 'Debited' More importantly, it allows ProofOfChance apps to 'CreditFromGame` or `DebitForGame` in the context of a given game\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"creditPlayer(address)\":{\"details\":\"Credits player as though player manually credits themselves.\"},\"creditPlayers(address[])\":{\"details\":\"Credits player as though player manually credits themselves.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"OwnableUnauthorizedAccount(address)\":[{\"notice\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"user\",\"methods\":{\"getBalance(address)\":{\"notice\":\"returns the balance of a wallet owner it does not include the balances deposited in games\"},\"getGameBalance(address,uint256)\":{\"notice\":\"Returns the wallet balance of an app's game\"},\"getTotalBalance()\":{\"notice\":\"returns the ether balance of this wallet contract\"},\"withdraw(uint256)\":{\"notice\":\"Allows you to withdraw a specified amount of your wallet balance\"},\"withdrawAll()\":{\"notice\":\"Allows you to withdraw all your wallet balance\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Wallets.sol\":\"Wallets\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.20;\\n\\nabstract contract Ownable {\\n    address private _owner;\\n\\n    /// The caller account is not authorized to perform an operation.\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    event OwnershipTransferred(\\n        address indexed previousOwner,\\n        address indexed newOwner\\n    );\\n\\n    /// @dev The owner is not a valid owner account.\\n    error OwnableInvalidOwner(address owner);\\n\\n    constructor() {\\n        _transferOwnership(msg.sender);\\n    }\\n\\n    /// @dev Throws if called by any account other than the owner.\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /// @dev Returns the address of the current owner.\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /// @dev Throws if the sender is not the owner.\\n    function _checkOwner() internal view {\\n        if (owner() != msg.sender) {\\n            revert OwnableUnauthorizedAccount(msg.sender);\\n        }\\n    }\\n\\n    /// @dev Transfers ownership of the contract to a new account (`newOwner`).\\n    /// Can only be called by the current owner.\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /// @dev Transfers ownership of the contract to a new account (`newOwner`).\\n    /// Internal function without access restriction.\\n    function _transferOwnership(address newOwner) internal {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xf819cf6049b3648f37b34d16ec4ff0107d828e18d728a8c061faeabf6db180d4\",\"license\":\"SEE LICENSE IN LICENSE\"},\"src/Wallets.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity ^0.8.20;\\n\\nimport {Ownable} from './Ownable.sol';\\nimport {UsingReentrancyGuard} from './Wallets/ReentrancyGuard.sol';\\n\\n/// TODO: Move to orisirisi-contracts when more games are introduced\\n/// TODO: Consider renaming to GameWallets\\n\\n/// @dev ProofOfChance Wallets supports only coinflip at the time of deployment\\n/// It acts as a regular wallet that can be 'Credited' and 'Debited'\\n/// More importantly, it allows ProofOfChance apps to 'CreditFromGame` or `DebitForGame` in\\n/// the context of a given game\\ncontract Wallets is UsingReentrancyGuard, Ownable {\\n    mapping(address => bool) apps;\\n    mapping(address app => mapping(uint gameID => uint balance)) gameBalances;\\n    mapping(address owner => uint amount) balances;\\n\\n    event Credit(address indexed owner, uint amount);\\n    event Debit(address indexed owner, uint amount);\\n    event CreditFromGame(\\n        address indexed app,\\n        uint indexed gameID,\\n        address indexed owner,\\n        uint amount\\n    );\\n    event DebitForGame(\\n        address indexed app,\\n        uint indexed gameID,\\n        address indexed owner,\\n        uint amount\\n    );\\n\\n    error InsufficientFunds();\\n    error UnAuthorizedApp();\\n\\n    receive() external payable {\\n        _credit();\\n    }\\n\\n    function addApp(address app) external onlyOwner {\\n        apps[app] = true;\\n    }\\n\\n    function removeApp(address app) external onlyOwner {\\n        apps[app] = false;\\n    }\\n\\n    modifier onlyApp() {\\n        if (!apps[msg.sender]) {\\n            revert UnAuthorizedApp();\\n        }\\n        _;\\n    }\\n\\n    function debitForGame(\\n        uint gameID,\\n        address player,\\n        uint amount\\n    ) external onlyApp {\\n        if (balances[player] < amount) {\\n            revert InsufficientFunds();\\n        }\\n        balances[player] -= amount;\\n        address app = msg.sender;\\n        gameBalances[app][gameID] += amount;\\n\\n        emit DebitForGame(app, gameID, player, amount);\\n    }\\n\\n    /// @dev Credits player as though player manually credits themselves.\\n    function creditPlayer(address player) external payable {\\n        uint amount = msg.value;\\n        balances[player] += amount;\\n        emit Credit(player, amount);\\n    }\\n\\n    function credit() external payable {\\n        _credit();\\n    }\\n\\n    /// @dev Credits player as though player manually credits themselves.\\n    function creditPlayers(address[] memory players) external payable {\\n        uint amount = msg.value;\\n        uint playersSize = players.length;\\n        require(amount % playersSize == 0);\\n        uint amountForEachPlayer = amount / playersSize;\\n        for (uint i; i < playersSize; ) {\\n            balances[players[i]] += amountForEachPlayer;\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function creditPlayersAndCreditAppOwnerTheRest(\\n        uint gameID,\\n        address[] memory players,\\n        uint amount\\n    ) external onlyApp {\\n        address app = msg.sender;\\n        require(gameBalances[app][gameID] > players.length * amount);\\n        creditPlayers(app, gameID, players, amount);\\n        creditAppOwnerTheRest(app, gameID);\\n    }\\n\\n    /// @notice Allows you to withdraw a specified amount of your wallet balance\\n    function withdraw(uint amount) external nonReentrant {\\n        address owner = msg.sender;\\n        uint balance = balances[owner];\\n        if (balance < amount) {\\n            revert InsufficientFunds();\\n        }\\n        balances[owner] -= amount;\\n\\n        pay(owner, amount);\\n\\n        emit Debit(owner, amount);\\n    }\\n\\n    /// @notice Allows you to withdraw all your wallet balance\\n    function withdrawAll() external nonReentrant {\\n        address owner = msg.sender;\\n        uint balance = balances[owner];\\n        if (balance == 0) {\\n            revert InsufficientFunds();\\n        }\\n        balances[owner] = 0;\\n\\n        pay(owner, balance);\\n\\n        emit Debit(owner, balance);\\n    }\\n\\n    /// @notice Returns the wallet balance of an app's game\\n    function getGameBalance(\\n        address app,\\n        uint gameID\\n    ) external view returns (uint) {\\n        return gameBalances[app][gameID];\\n    }\\n\\n    function _credit() private {\\n        address player = msg.sender;\\n        uint amount = msg.value;\\n        balances[player] += amount;\\n        emit Credit(player, amount);\\n    }\\n\\n    /// @notice returns the balance of a wallet owner\\n    /// it does not include the balances deposited in games\\n    function getBalance(address owner) external view returns (uint) {\\n        return balances[owner];\\n    }\\n\\n    /// @notice returns the ether balance of this wallet contract\\n    function getTotalBalance() external view returns (uint) {\\n        return address(this).balance;\\n    }\\n\\n    function pay(address to, uint256 amount) private {\\n        (bool sent, ) = to.call{value: amount}('');\\n        require(sent);\\n    }\\n\\n    function creditPlayers(\\n        address app,\\n        uint gameID,\\n        address[] memory players,\\n        uint amount\\n    ) private {\\n        for (uint i; i < players.length; ) {\\n            address player = players[i];\\n            gameBalances[app][gameID] -= amount;\\n            balances[player] += amount;\\n            emit CreditFromGame(app, gameID, player, amount);\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n    }\\n\\n    function creditAppOwnerTheRest(address app, uint gameID) private {\\n        uint restAmount = gameBalances[app][gameID];\\n        // Currently, all apps have one owner, who happens to own this wallet contract too\\n        address appOwner = owner();\\n        balances[appOwner] = restAmount;\\n        gameBalances[app][gameID] = 0;\\n        emit CreditFromGame(app, gameID, appOwner, restAmount);\\n    }\\n}\\n\",\"keccak256\":\"0xac6ca39b4c7e52f4bf517ae21f9c4910837d537b371fc9d8c40d20cdbc335298\",\"license\":\"SEE LICENSE IN LICENSE\"},\"src/Wallets/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract UsingReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        if (_status == _ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0cfe4707944d2f14e0c8b6a3ed44a9fec9f9060b15a53620cb0c57ec84b2ea98\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600160005561001f33610024565b610076565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610d01806100856000396000f3fe6080604052600436106100e15760003560e01c806393ac9b161161007f578063c288e40411610059578063c288e40414610202578063d0c6fdb714610222578063f2fde38b14610242578063f8b2cb4f1461026257600080fd5b806393ac9b16146101c7578063a06d083c146101e7578063b820af4c146101ef57600080fd5b80632e1a7d4d116100bb5780632e1a7d4d1461014a57806356ceece21461016a578063853828b61461018a5780638da5cb5b1461019f57600080fd5b8063037e34e5146100f557806312314e971461011557806312b583491461012857600080fd5b366100f0576100ee610298565b005b600080fd5b34801561010157600080fd5b506100ee610110366004610a45565b610300565b6100ee610123366004610a7a565b61041b565b34801561013457600080fd5b50475b6040519081526020015b60405180910390f35b34801561015657600080fd5b506100ee610165366004610a9c565b610445565b34801561017657600080fd5b50610137610185366004610ab5565b610508565b34801561019657600080fd5b506100ee610533565b3480156101ab57600080fd5b506001546040516001600160a01b039091168152602001610141565b3480156101d357600080fd5b506100ee6101e2366004610a7a565b6105e0565b6100ee61060c565b6100ee6101fd366004610b97565b610614565b34801561020e57600080fd5b506100ee61021d366004610bd4565b6106a7565b34801561022e57600080fd5b506100ee61023d366004610a7a565b610730565b34801561024e57600080fd5b506100ee61025d366004610a7a565b610759565b34801561026e57600080fd5b5061013761027d366004610a7a565b6001600160a01b031660009081526004602052604090205490565b336000818152600460205260408120805434928392916102b9908490610c3a565b90915550506040518181526001600160a01b038316907f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa0949060200160405180910390a25050565b3360009081526002602052604090205460ff1661033057604051630f78199760e11b815260040160405180910390fd5b6001600160a01b0382166000908152600460205260409020548111156103695760405163356680b760e01b815260040160405180910390fd5b6001600160a01b03821660009081526004602052604081208054839290610391908490610c4d565b9091555050336000818152600360209081526040808320878452909152812080548492906103c0908490610c3a565b92505081905550826001600160a01b031684826001600160a01b03167f41a1d93164b85ee22290546a8988d6cea30a2fce0a7d4ac0694467f73cba35b18560405161040d91815260200190565b60405180910390a450505050565b6001600160a01b0381166000908152600460205260408120805434928392916102b9908490610c3a565b61044d61076a565b336000818152600460205260409020548281101561047e5760405163356680b760e01b815260040160405180910390fd5b6001600160a01b038216600090815260046020526040812080548592906104a6908490610c4d565b909155506104b690508284610794565b816001600160a01b03167f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc6046846040516104f191815260200190565b60405180910390a250506105056001600055565b50565b6001600160a01b03821660009081526003602090815260408083208484529091529020545b92915050565b61053b61076a565b336000818152600460205260408120549081900361056c5760405163356680b760e01b815260040160405180910390fd5b6001600160a01b03821660009081526004602052604081205561058f8282610794565b816001600160a01b03167f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc6046826040516105ca91815260200190565b60405180910390a250506105de6001600055565b565b6105e86107f9565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b6105de610298565b805134906106228183610c76565b1561062c57600080fd5b60006106388284610c8a565b905060005b828110156106a057816004600087848151811061065c5761065c610c9e565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008282546106939190610c3a565b909155505060010161063d565b5050505050565b3360009081526002602052604090205460ff166106d757604051630f78199760e11b815260040160405180910390fd5b815133906106e6908390610cb4565b6001600160a01b03821660009081526003602090815260408083208884529091529020541161071457600080fd5b61072081858585610839565b61072a8185610934565b50505050565b6107386107f9565b6001600160a01b03166000908152600260205260409020805460ff19169055565b6107616107f9565b610505816109d7565b60026000540361078d57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146107e1576040519150601f19603f3d011682016040523d82523d6000602084013e6107e6565b606091505b50509050806107f457600080fd5b505050565b3361080c6001546001600160a01b031690565b6001600160a01b0316146105de5760405163118cdaa760e01b815233600482015260240160405180910390fd5b60005b82518110156106a057600083828151811061085957610859610c9e565b602002602001015190508260036000886001600160a01b03166001600160a01b03168152602001908152602001600020600087815260200190815260200160002060008282546108a99190610c4d565b90915550506001600160a01b038116600090815260046020526040812080548592906108d6908490610c3a565b92505081905550806001600160a01b031685876001600160a01b03167f66146bebca25df9b39213211f3772ec0db2654a806515a04a19a5494cbd3e2cc8660405161092391815260200190565b60405180910390a45060010161083c565b6001600160a01b03821660009081526003602090815260408083208484529091528120549061096b6001546001600160a01b031690565b6001600160a01b038181166000818152600460209081526040808320889055938916808352600382528483208984528252848320929092559251868152939450909286927f66146bebca25df9b39213211f3772ec0db2654a806515a04a19a5494cbd3e2cc910161040d565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b0381168114610a4057600080fd5b919050565b600080600060608486031215610a5a57600080fd5b83359250610a6a60208501610a29565b9150604084013590509250925092565b600060208284031215610a8c57600080fd5b610a9582610a29565b9392505050565b600060208284031215610aae57600080fd5b5035919050565b60008060408385031215610ac857600080fd5b610ad183610a29565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610b0657600080fd5b8135602067ffffffffffffffff80831115610b2357610b23610adf565b8260051b604051601f19603f83011681018181108482111715610b4857610b48610adf565b604052938452858101830193838101925087851115610b6657600080fd5b83870191505b84821015610b8c57610b7d82610a29565b83529183019190830190610b6c565b979650505050505050565b600060208284031215610ba957600080fd5b813567ffffffffffffffff811115610bc057600080fd5b610bcc84828501610af5565b949350505050565b600080600060608486031215610be957600080fd5b83359250602084013567ffffffffffffffff811115610c0757600080fd5b610c1386828701610af5565b925050604084013590509250925092565b634e487b7160e01b600052601160045260246000fd5b8082018082111561052d5761052d610c24565b8181038181111561052d5761052d610c24565b634e487b7160e01b600052601260045260246000fd5b600082610c8557610c85610c60565b500690565b600082610c9957610c99610c60565b500490565b634e487b7160e01b600052603260045260246000fd5b808202811582820484141761052d5761052d610c2456fea264697066735822122041c99fa1522079fc9442bf092c1c9647dd62f4e94488b5a55abf22234cfe128764736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106100e15760003560e01c806393ac9b161161007f578063c288e40411610059578063c288e40414610202578063d0c6fdb714610222578063f2fde38b14610242578063f8b2cb4f1461026257600080fd5b806393ac9b16146101c7578063a06d083c146101e7578063b820af4c146101ef57600080fd5b80632e1a7d4d116100bb5780632e1a7d4d1461014a57806356ceece21461016a578063853828b61461018a5780638da5cb5b1461019f57600080fd5b8063037e34e5146100f557806312314e971461011557806312b583491461012857600080fd5b366100f0576100ee610298565b005b600080fd5b34801561010157600080fd5b506100ee610110366004610a45565b610300565b6100ee610123366004610a7a565b61041b565b34801561013457600080fd5b50475b6040519081526020015b60405180910390f35b34801561015657600080fd5b506100ee610165366004610a9c565b610445565b34801561017657600080fd5b50610137610185366004610ab5565b610508565b34801561019657600080fd5b506100ee610533565b3480156101ab57600080fd5b506001546040516001600160a01b039091168152602001610141565b3480156101d357600080fd5b506100ee6101e2366004610a7a565b6105e0565b6100ee61060c565b6100ee6101fd366004610b97565b610614565b34801561020e57600080fd5b506100ee61021d366004610bd4565b6106a7565b34801561022e57600080fd5b506100ee61023d366004610a7a565b610730565b34801561024e57600080fd5b506100ee61025d366004610a7a565b610759565b34801561026e57600080fd5b5061013761027d366004610a7a565b6001600160a01b031660009081526004602052604090205490565b336000818152600460205260408120805434928392916102b9908490610c3a565b90915550506040518181526001600160a01b038316907f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa0949060200160405180910390a25050565b3360009081526002602052604090205460ff1661033057604051630f78199760e11b815260040160405180910390fd5b6001600160a01b0382166000908152600460205260409020548111156103695760405163356680b760e01b815260040160405180910390fd5b6001600160a01b03821660009081526004602052604081208054839290610391908490610c4d565b9091555050336000818152600360209081526040808320878452909152812080548492906103c0908490610c3a565b92505081905550826001600160a01b031684826001600160a01b03167f41a1d93164b85ee22290546a8988d6cea30a2fce0a7d4ac0694467f73cba35b18560405161040d91815260200190565b60405180910390a450505050565b6001600160a01b0381166000908152600460205260408120805434928392916102b9908490610c3a565b61044d61076a565b336000818152600460205260409020548281101561047e5760405163356680b760e01b815260040160405180910390fd5b6001600160a01b038216600090815260046020526040812080548592906104a6908490610c4d565b909155506104b690508284610794565b816001600160a01b03167f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc6046846040516104f191815260200190565b60405180910390a250506105056001600055565b50565b6001600160a01b03821660009081526003602090815260408083208484529091529020545b92915050565b61053b61076a565b336000818152600460205260408120549081900361056c5760405163356680b760e01b815260040160405180910390fd5b6001600160a01b03821660009081526004602052604081205561058f8282610794565b816001600160a01b03167f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc6046826040516105ca91815260200190565b60405180910390a250506105de6001600055565b565b6105e86107f9565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b6105de610298565b805134906106228183610c76565b1561062c57600080fd5b60006106388284610c8a565b905060005b828110156106a057816004600087848151811061065c5761065c610c9e565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008282546106939190610c3a565b909155505060010161063d565b5050505050565b3360009081526002602052604090205460ff166106d757604051630f78199760e11b815260040160405180910390fd5b815133906106e6908390610cb4565b6001600160a01b03821660009081526003602090815260408083208884529091529020541161071457600080fd5b61072081858585610839565b61072a8185610934565b50505050565b6107386107f9565b6001600160a01b03166000908152600260205260409020805460ff19169055565b6107616107f9565b610505816109d7565b60026000540361078d57604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146107e1576040519150601f19603f3d011682016040523d82523d6000602084013e6107e6565b606091505b50509050806107f457600080fd5b505050565b3361080c6001546001600160a01b031690565b6001600160a01b0316146105de5760405163118cdaa760e01b815233600482015260240160405180910390fd5b60005b82518110156106a057600083828151811061085957610859610c9e565b602002602001015190508260036000886001600160a01b03166001600160a01b03168152602001908152602001600020600087815260200190815260200160002060008282546108a99190610c4d565b90915550506001600160a01b038116600090815260046020526040812080548592906108d6908490610c3a565b92505081905550806001600160a01b031685876001600160a01b03167f66146bebca25df9b39213211f3772ec0db2654a806515a04a19a5494cbd3e2cc8660405161092391815260200190565b60405180910390a45060010161083c565b6001600160a01b03821660009081526003602090815260408083208484529091528120549061096b6001546001600160a01b031690565b6001600160a01b038181166000818152600460209081526040808320889055938916808352600382528483208984528252848320929092559251868152939450909286927f66146bebca25df9b39213211f3772ec0db2654a806515a04a19a5494cbd3e2cc910161040d565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b0381168114610a4057600080fd5b919050565b600080600060608486031215610a5a57600080fd5b83359250610a6a60208501610a29565b9150604084013590509250925092565b600060208284031215610a8c57600080fd5b610a9582610a29565b9392505050565b600060208284031215610aae57600080fd5b5035919050565b60008060408385031215610ac857600080fd5b610ad183610a29565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610b0657600080fd5b8135602067ffffffffffffffff80831115610b2357610b23610adf565b8260051b604051601f19603f83011681018181108482111715610b4857610b48610adf565b604052938452858101830193838101925087851115610b6657600080fd5b83870191505b84821015610b8c57610b7d82610a29565b83529183019190830190610b6c565b979650505050505050565b600060208284031215610ba957600080fd5b813567ffffffffffffffff811115610bc057600080fd5b610bcc84828501610af5565b949350505050565b600080600060608486031215610be957600080fd5b83359250602084013567ffffffffffffffff811115610c0757600080fd5b610c1386828701610af5565b925050604084013590509250925092565b634e487b7160e01b600052601160045260246000fd5b8082018082111561052d5761052d610c24565b8181038181111561052d5761052d610c24565b634e487b7160e01b600052601260045260246000fd5b600082610c8557610c85610c60565b500690565b600082610c9957610c99610c60565b500490565b634e487b7160e01b600052603260045260246000fd5b808202811582820484141761052d5761052d610c2456fea264697066735822122041c99fa1522079fc9442bf092c1c9647dd62f4e94488b5a55abf22234cfe128764736f6c63430008140033",
  "devdoc": {
    "details": "ProofOfChance Wallets supports only coinflip at the time of deployment It acts as a regular wallet that can be 'Credited' and 'Debited' More importantly, it allows ProofOfChance apps to 'CreditFromGame` or `DebitForGame` in the context of a given game",
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "creditPlayer(address)": {
        "details": "Credits player as though player manually credits themselves."
      },
      "creditPlayers(address[])": {
        "details": "Credits player as though player manually credits themselves."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "errors": {
      "OwnableUnauthorizedAccount(address)": [
        {
          "notice": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "user",
    "methods": {
      "getBalance(address)": {
        "notice": "returns the balance of a wallet owner it does not include the balances deposited in games"
      },
      "getGameBalance(address,uint256)": {
        "notice": "Returns the wallet balance of an app's game"
      },
      "getTotalBalance()": {
        "notice": "returns the ether balance of this wallet contract"
      },
      "withdraw(uint256)": {
        "notice": "Allows you to withdraw a specified amount of your wallet balance"
      },
      "withdrawAll()": {
        "notice": "Allows you to withdraw all your wallet balance"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1960,
        "contract": "src/Wallets.sol:Wallets",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 1214,
        "contract": "src/Wallets.sol:Wallets",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1410,
        "contract": "src/Wallets.sol:Wallets",
        "label": "apps",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1416,
        "contract": "src/Wallets.sol:Wallets",
        "label": "gameBalances",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 1420,
        "contract": "src/Wallets.sol:Wallets",
        "label": "balances",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}